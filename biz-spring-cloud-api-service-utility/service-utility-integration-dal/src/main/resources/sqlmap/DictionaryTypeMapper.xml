<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.waynechu.utility.dal.mapper.DictionaryTypeMapper">
    <resultMap id="BaseResultMap" type="cn.waynechu.utility.dal.dataobject.DictionaryTypeDO">
        <!--@mbg.generated-->
        <!--@Table dictionary_type-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="type_code" jdbcType="VARCHAR" property="typeCode"/>
        <result column="app_id" jdbcType="VARCHAR" property="appId"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="created_user" jdbcType="VARCHAR" property="createdUser"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_user" jdbcType="VARCHAR" property="updatedUser"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
        <result column="deleted_status" jdbcType="BOOLEAN" property="deletedStatus"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, type_code, app_id, description, created_user, created_time, updated_user, updated_time,
        deleted_status
    </sql>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update dictionary_type
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="type_code = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.typeCode,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="app_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.appId,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="description = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.description,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="created_user = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createdUser,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="created_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="updated_user = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updatedUser,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="updated_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="deleted_status = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.deletedStatus,jdbcType=BOOLEAN}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into dictionary_type
        (type_code, app_id, description, created_user, created_time, updated_user, updated_time,
        deleted_status)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.typeCode,jdbcType=VARCHAR}, #{item.appId,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR},
            #{item.createdUser,jdbcType=VARCHAR}, #{item.createdTime,jdbcType=TIMESTAMP},
            #{item.updatedUser,jdbcType=VARCHAR},
            #{item.updatedTime,jdbcType=TIMESTAMP}, #{item.deletedStatus,jdbcType=BOOLEAN})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id"
            parameterType="cn.waynechu.utility.dal.dataobject.DictionaryTypeDO" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into dictionary_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            type_code,
            app_id,
            description,
            created_user,
            created_time,
            updated_user,
            updated_time,
            deleted_status,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{typeCode,jdbcType=VARCHAR},
            #{appId,jdbcType=VARCHAR},
            #{description,jdbcType=VARCHAR},
            #{createdUser,jdbcType=VARCHAR},
            #{createdTime,jdbcType=TIMESTAMP},
            #{updatedUser,jdbcType=VARCHAR},
            #{updatedTime,jdbcType=TIMESTAMP},
            #{deletedStatus,jdbcType=BOOLEAN},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            type_code = #{typeCode,jdbcType=VARCHAR},
            app_id = #{appId,jdbcType=VARCHAR},
            description = #{description,jdbcType=VARCHAR},
            created_user = #{createdUser,jdbcType=VARCHAR},
            created_time = #{createdTime,jdbcType=TIMESTAMP},
            updated_user = #{updatedUser,jdbcType=VARCHAR},
            updated_time = #{updatedTime,jdbcType=TIMESTAMP},
            deleted_status = #{deletedStatus,jdbcType=BOOLEAN},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="cn.waynechu.utility.dal.dataobject.DictionaryTypeDO" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into dictionary_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="typeCode != null">
                type_code,
            </if>
            <if test="appId != null">
                app_id,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="createdUser != null">
                created_user,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="updatedUser != null">
                updated_user,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
            <if test="deletedStatus != null">
                deleted_status,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="typeCode != null">
                #{typeCode,jdbcType=VARCHAR},
            </if>
            <if test="appId != null">
                #{appId,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createdUser != null">
                #{createdUser,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedUser != null">
                #{updatedUser,jdbcType=VARCHAR},
            </if>
            <if test="updatedTime != null">
                #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedStatus != null">
                #{deletedStatus,jdbcType=BOOLEAN},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="typeCode != null">
                type_code = #{typeCode,jdbcType=VARCHAR},
            </if>
            <if test="appId != null">
                app_id = #{appId,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createdUser != null">
                created_user = #{createdUser,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedUser != null">
                updated_user = #{updatedUser,jdbcType=VARCHAR},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedStatus != null">
                deleted_status = #{deletedStatus,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>
</mapper>