<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.waynechu.renting.dal.common.mapper.ShopConfigLogMapper">
    <resultMap id="BaseResultMap" type="com.waynechu.renting.dal.common.entity.ShopConfigLog">
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="shop_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="change_item" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="before_value" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="after_value" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_user" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_user" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="is_delete" jdbcType="BIT" javaType="java.lang.Boolean"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, shop_id, change_item, before_value, after_value, create_user, create_time,
    update_user, update_time, is_delete
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.waynechu.renting.dal.common.entity.ShopConfigLogExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from shop_config_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from shop_config_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from shop_config_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.waynechu.renting.dal.common.entity.ShopConfigLogExample">
        delete from shop_config_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.waynechu.renting.dal.common.entity.ShopConfigLog">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into shop_config_log (shop_id, change_item, before_value,
        after_value, create_user, create_time,
        update_user, update_time, is_delete
        )
        values (#{shopId,jdbcType=BIGINT}, #{changeItem,jdbcType=VARCHAR}, #{beforeValue,jdbcType=INTEGER},
        #{afterValue,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=BIT}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.waynechu.renting.dal.common.entity.ShopConfigLog">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into shop_config_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="shopId != null">
                shop_id,
            </if>
            <if test="changeItem != null">
                change_item,
            </if>
            <if test="beforeValue != null">
                before_value,
            </if>
            <if test="afterValue != null">
                after_value,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="shopId != null">
                #{shopId,jdbcType=BIGINT},
            </if>
            <if test="changeItem != null">
                #{changeItem,jdbcType=VARCHAR},
            </if>
            <if test="beforeValue != null">
                #{beforeValue,jdbcType=INTEGER},
            </if>
            <if test="afterValue != null">
                #{afterValue,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.waynechu.renting.dal.common.entity.ShopConfigLogExample"
            resultType="java.lang.Integer">
        select count(*) from shop_config_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update shop_config_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.shopId != null">
                shop_id = #{record.shopId,jdbcType=BIGINT},
            </if>
            <if test="record.changeItem != null">
                change_item = #{record.changeItem,jdbcType=VARCHAR},
            </if>
            <if test="record.beforeValue != null">
                before_value = #{record.beforeValue,jdbcType=INTEGER},
            </if>
            <if test="record.afterValue != null">
                after_value = #{record.afterValue,jdbcType=INTEGER},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateUser != null">
                update_user = #{record.updateUser,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update shop_config_log
        set id = #{record.id,jdbcType=BIGINT},
        shop_id = #{record.shopId,jdbcType=BIGINT},
        change_item = #{record.changeItem,jdbcType=VARCHAR},
        before_value = #{record.beforeValue,jdbcType=INTEGER},
        after_value = #{record.afterValue,jdbcType=INTEGER},
        create_user = #{record.createUser,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_user = #{record.updateUser,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        is_delete = #{record.isDelete,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.waynechu.renting.dal.common.entity.ShopConfigLog">
        update shop_config_log
        <set>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=BIGINT},
            </if>
            <if test="changeItem != null">
                change_item = #{changeItem,jdbcType=VARCHAR},
            </if>
            <if test="beforeValue != null">
                before_value = #{beforeValue,jdbcType=INTEGER},
            </if>
            <if test="afterValue != null">
                after_value = #{afterValue,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.waynechu.renting.dal.common.entity.ShopConfigLog">
    update shop_config_log
    set shop_id = #{shopId,jdbcType=BIGINT},
      change_item = #{changeItem,jdbcType=VARCHAR},
      before_value = #{beforeValue,jdbcType=INTEGER},
      after_value = #{afterValue,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>