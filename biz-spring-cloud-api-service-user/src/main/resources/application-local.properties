server.port=10010
spring.application.name=service-user-api
## eureka
eureka.instance.prefer-ip-address=true
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90
eureka.instance.metadata-map.startup=${random.int}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://admin:123456@localhost:9001/eureka/,http://admin:123456@localhost:9002/eureka/
eureka.client.registry-fetch-interval-seconds=5
## feign
# \u914D\u7F6E\u8BF7\u6C42GZIP\u538B\u7F29
feign.compression.request.enabled=true
# \u914D\u7F6E\u54CD\u5E94GZIP\u538B\u7F29
feign.compression.response.enabled=true
# \u914D\u7F6E\u54CD\u5E94GZIP\u538B\u7F29
feign.compression.request.mime-types=text/xml,application/xml,application/json
# \u914D\u7F6E\u538B\u7F29\u6570\u636E\u5927\u5C0F\u7684\u4E0B\u9650
feign.compression.request.min-request-size=2048
# \u6307\u5B9Afeign.client\u65E5\u5FD7\u7EA7\u522B
#feign.client.config.default.logger-level=full
# \u6307\u5B9Afeign.client\u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4
#feign.client.config.default.connect-timeout=5000
# \u6307\u5B9Afeign.client\u8BFB\u8D85\u65F6\u65F6\u95F4
#feign.client.config.default.read-timeout=5000
# feign\u5BA2\u6237\u7AEF\u5F00\u542Fhystrix\u7194\u65AD\u5668
feign.hystrix.enabled=true
## hystrix
# \u8C03\u7528\u9694\u79BB\u65B9\u5F0F \u9ED8\u8BA4: ExecutionIsolationStrategy:THREAD \u7EBF\u7A0B\u9694\u79BB
# \u56E0\u4E3A\u4F1A\u5BFC\u81F4RequestContextHolder.getRequestAttributes()\u83B7\u53D6\u4E0D\u5230\u7EBF\u7A0B\u53D8\u91CF\uFF0C\u6240\u4EE5\u4FEE\u6539\u6210SEMAPHORE
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
# \u8C03\u7528\u8D85\u65F6\u65F6\u95F4, \u9ED8\u8BA4: 5\u79D2
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=30000
# \u4F7F\u7528\u4FE1\u53F7\u91CF\u9694\u79BB\u65F6, \u547D\u4EE4\u8C03\u7528\u6700\u5927\u7684\u5E76\u53D1\u6570
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=1000
# \u4F7F\u7528\u4FE1\u53F7\u91CF\u9694\u79BB\u65F6, \u547D\u4EE4fallback\u8C03\u7528\u6700\u5927\u7684\u5E76\u53D1\u6570
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=500
# \u7194\u65AD\u5668\u5728\u6574\u4E2A\u7EDF\u8BA1\u65F6\u95F4\u5185\u662F\u5426\u5F00\u542F\u7684\u9600\u503C, \u9ED8\u8BA420\u4E2A\u8BF7\u6C42
hystrix.command.default.circuitBreaker.requestVolumeThreshold=1000
# \u914D\u7F6E\u7EBF\u7A0B\u6C60\u5927\u5C0F, \u9ED8\u8BA4\u503C10\u4E2A
hystrix.threadpool.default.coreSize=500
# \u914D\u7F6E\u961F\u5217\u957F\u5EA6, \u9ED8\u8BA4-1\u4F7F\u7528SynchronousQueue, \u5176\u4ED6\u503C\u5219\u4F7F\u7528LinkedBlockingQueue:\u4E0D\u53EF\u52A8\u6001\u4FEE\u6539
hystrix.threadpool.default.maxQueueSize=1000
# \u961F\u5217\u62D2\u7EDD\u7684\u9608\u503C,\u53EF\u901A\u8FC7\u4FEE\u6539\u8FD9\u4E2A\u53D8\u91CF\u52A8\u6001\u4FEE\u6539\u5141\u8BB8\u6392\u961F\u7684\u957F\u5EA6: maxQueueSize=-1\u65F6\u4E0D\u9002\u7528
hystrix.threadpool.default.queueSizeRejectionThreshold=1000
# \u7EBF\u7A0B\u751F\u5B58\u65F6\u95F4, \u9ED8\u8BA41\u5206\u949F
hystrix.threadpool.default.keepAliveTimeMinutes=1
## ribbon
# \u8BF7\u6C42\u8FDE\u63A5\u7684\u8D85\u65F6\u65F6\u95F4
ribbon.ConnectTimeout=5000
# \u8BF7\u6C42\u5904\u7406\u7684\u8D85\u65F6\u65F6\u95F4
ribbon.ReadTimeout=10000
ribbon.okToRetryOnAllOperations=false
ribbon.retryableStatusCodes=4,5
ribbon.okToRetryOnConnectErrors=true
# \u5BF9\u7B2C\u4E00\u6B21\u8BF7\u6C42\u7684\u670D\u52A1\u7684\u91CD\u8BD5\u6B21\u6570
ribbon.MaxAutoRetries=1
# \u91CD\u8BD5\u5176\u4ED6\u5B9E\u4F8B\u7684\u6700\u5927\u91CD\u8BD5\u6B21\u6570(\u4E0D\u5305\u62EC\u7B2C\u4E00\u4E2A\u670D\u52A1)
ribbon.MaxAutoRetriesNextServer=1
ribbon.ServerListRefreshInterval=3000
## endpoint
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
## api-starter
### swagger
biz.api.starter.swagger.enable=true
biz.api.starter.swagger.api-title=\u7528\u6237API
biz.api.starter.swagger.api-description=\u7528\u6237API
biz.api.starter.swagger.api-version=1.0.0
biz.api.starter.swagger.scan-package=com.waynechu
biz.api.starter.swagger.contact-name=waynechu
biz.api.starter.swagger.contact-url=www.waynechu.cn
biz.api.starter.swagger.contact-email=waynechu@waynechu.cn
### distributed-lock
biz.api.starter.distributed-lock.enable=true
biz.api.starter.distributed-lock.prefix=work.waynechu.cn
## rabbitmq
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=waynechu
spring.rabbitmq.password=123456
spring.rabbitmq.virtual-host=/dev
spring.rabbitmq.publisher-confirms=true
## elk
elk.enable=true
elk.host=${spring.rabbitmq.host}
elk.port=${spring.rabbitmq.port}
elk.username=${spring.rabbitmq.username}
elk.password=${spring.rabbitmq.password}
elk.application-id=${spring.application.name}
elk.virtual-host=/logback
elk.exchange=topic.loggingExchange
elk.routing-key=logback.#
elk.connection-name=biz|${spring.application.name}
## sentry
sentry.enable=true
sentry.dsn=http://a1c395c85d244742ae2a50b90f1535b8@localhost:9000/2
sentry.stacktrace-app-packages=
## spring redis
spring.redis.database=0
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=123456